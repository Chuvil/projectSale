https://git-scm.com/download/win
Инициализация проекта
git init
Настройка пользователя
git config --global user.name "Chuvil"
git config --global user.email "chuvilevpal@gmail.com"
git config --list    //выводит все конфигурационные настройки
git help "название команды"  //выводит помощь

git status Позволяет следить за изменением и состоянием репозитория.

Добавляем файлы проекта в репозиторий
git add . //Добавляет все файлы проекта. Если нужно добавить один файл git add "название файла"
git commit -a -m"Название точки восстановления" //Сохраняет состояние файлов проекта.
Для последующих версий контроля параметр -a использовать не нужно.

Добавляем файлы в глобальный репозиторий(гитхаб)
git remote add origin https://github.com/Chuvil/projectSale.git //Соединяет репозитории и добавляет файлы проекта в репозиторий с именем Ориджин.
git push -u origin master //Она добавляет файлы в проект ориджин

Для того что бы вносить точки восстановления и файлы с изменениями в глобальный репозиторий нужно после коммитов в локальном выполнять команду 
git push  // Добавляет в глобальный репозиторий

Работа команды(людей). Создаём папку для второго пользователя, в которую клонируем проект с помощью ссылки, которую получаем в глобальном репозитории. 
git clone https://github.com/Chuvil/projectSale.git
После того, как клонируется проект нужно зайти в папку проекта консоли ГитБаш с помощью команды cd "Название папки проекта"

git fetch //Забирает новые данные с глобального репозитория
git pull //Показывает в рабочей папке изменения

Работа с ветками. Внимание, прежде чем создавать ветку нужно сделать коммит проекта, который не разделён.
git branch Название ветки //Создаёт ветку
git branch -v //Показывает все ветки. Активная - зелёная
git checkout название ветки //Меняем ветку
При добавлении коммита в глобальный репозиторий не в основную ветку 
git push -u origin название ветки 
Второй способ создания ветки
git checkout -b название ветки //Ветка будет создана и мы туда моментально переходим

https://sourceforge.net/projects/kdiff3/?source=typ_redirect - для устранения конфликтов и объединения веток скачиваем программу 
Прежде чем что-то делать, каждая ветка должка быть закомичена. Проверяем обе статусом. 
Нужно перейти в ветку мастер. Обязательно проверить и с неё запускать приложение, которое нужно настроить коммандой.
git config --global mergetool.kdiff3.cmd '"d:\\KDiff3\\kdiff3" $BASE $LOCAL $REMOTE -o $MERGED'
Для запуска приложения выполняем комманду 
git mergetool
Для проведения изменений используем комманду 
git merge